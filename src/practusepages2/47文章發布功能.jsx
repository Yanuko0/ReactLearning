// 實現基礎的文章發布 => 實現封面上傳功能 => 實現帶封面的文章

// 1.麵包屑導航組件 Breadcrumb
// 2.表單組件 From
// 3.輸入框組件 Input
// 4.下拉框組件 Select- Option
// 5.按鈕組件 Button

// ------------------------------------------------------------------------

// 基礎文章發布-準備富文本編輯器
// 1.安裝react-quill富文本編輯器
// npm i react-quill
// 2.導入編輯器組件和配套樣式文件
// 3.渲染編輯器組件
// 4.調整編輯器組件樣式

// ------------------------------------------------------------------------

// 基礎文章發布-頻道數據獲取渲染

// 1.根據接口文檔在APIS模塊中封裝接口函數
// 2.使用useState維護數據
// 3.在useEffect中調用接口獲取數據並存入state
// 4.綁定數據到下拉框組件

// ------------------------------------------------------------------------

// 基礎文章發布-收集表單數據提交表單

// 使用Form組件收集表單數據
// 按照接口文檔封裝接口函數
// 按照接口文檔處理表單數據(數據二次處理)
// 提交接口並驗證是否成功

// ------------------------------------------------------------------------

// 上傳文章封面基礎功能實現

// 使用現成組件搭建結構 => 按照Upload組件添加配置實現上傳

// 實現切換封面類型

// 實現效果: 只有當前模式為單圖或者三圖模式時才顯示上傳組件

// 獲取當前的封面類型 => 對上傳組件進行條件渲染

// ------------------------------------------------------------------------

// 控制上傳圖片的數量

// 實現效果
// 1.單圖模式時, 最多可以上傳一張圖片
// 2.三圖模式時, 最多可以上傳三張圖片

// 如何實現
// 1.找到限制上傳數量的組件屬性
// 2.使用imageType進行綁定控制

// ------------------------------------------------------------------------

// 發布一個帶封面的文章

// 文章列表模塊-功能描述和靜態結構創建

// 文章列表模塊 - 渲染頻道數據
// 可選方案:
// 1.直接在寫一遍
// 2.存到Redux中維護
// 3.使用自定義業務hook  => 1.創建一個use打頭的函數
//                      => 2.在函數中封裝業務邏輯, 並return出組件中要用的狀態數據
//                      => 3.組件中導入函數執行並解構狀態數據使用

// ------------------------------------------------------------------------

// 文章列表模塊-渲染table文章列表

// 1.封裝請求街口
// 2.使用useState維護狀態數據
// 3.使用useEffect發送請求
// 4.在組件身上綁定對應屬性完成渲染


// ------------------------------------------------------------------------

// 文章列表模塊-適配文章狀態

// 實現效果:根據不同的狀態在狀態列顯示不同Tag

// 實現思路
// 1.如果要適配的狀態只有兩個-三元條件渲染
// 2.如果要適配的狀態有多個-枚舉渲染

// ------------------------------------------------------------------------

// 文章列表 - 篩選功能實現

// 篩選功能本質:給請求列表街口傳遞不同的參數和後端要不同的數據

// 實現步驟:
// 1.準備完整的請求參數對象
// 2.獲取用戶選擇的表單數據
// 3.把表單數據放置到接口對應的字段中
// 4.重新調用文章列表接口渲染Table列表

// ------------------------------------------------------------------------

// 文章列表-分頁功能實現

// 實現效果:點擊頁數, 在table中顯示當前頁的數據列表

// 如何實現:
// 1.實現分頁展示( 頁數 = 總數 / 每頁條數)
// 2.點擊分頁拿到當前點擊的頁數
// 3.使用頁數作為請求參數重新獲取文章列表

// ------------------------------------------------------------------------

// 文章列表-刪除功能實現

// 實現效果: 點擊刪除按鈕刪除當前文章

// 如何實現:
// 1.點擊刪除彈出確認框
// 2.得到文章id, 使用id調用刪除接口
// 3.更新文章列表

// ------------------------------------------------------------------------

// 文章列表 - 編輯文章跳轉

// 實現效果:點擊編輯文章跳轉到文章編輯頁

// 如何實現:
// 1.獲取當前文章id
// 2.跳轉到創建(編輯)文章的路由


// ------------------------------------------------------------------------

