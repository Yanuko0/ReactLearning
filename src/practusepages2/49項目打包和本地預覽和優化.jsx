// 1.項目打包
//  打包指的是將項目的源代碼和資源文件進行處理,
//  生成可在環境中運行的靜態紋件的過程

// 打包命令 npm run build

// 2.本地預覽(模擬服務器運行項目)
// 本地預覽是指在本地通過靜態服務器模擬生產服務器運行項目的過程
// 1.安裝本地服務包 npm install -g serve
// 2.serve -s ./build
// npx serve -s build
// 3.瀏覽器中訪問 http://localhost:3000/


// ------------------------------------------------------------------------

// 打包優化 - 配置路由覽加載

// 什麼是路由懶加載
// 路由懶加載是指路由的js資源只有在被訪問時才會動態獲取,目的是為了優化項目首次打開來的時間

// 比如項目打開來會有
                    // 優化前               優化後
// 首頁                 home.js             home.js
// 文章管理             article.js          首次未加載
//創建文章              publish.js          首次未加載

// 只有用到才加載

// 如何進行配置?
// 1.把路由修改為React提供的lazy函數進行動態導入
// 2.使用react內置的Suspense組件 包里路由中element選項對應的組件


// ------------------------------------------------------------------------

// 打包優化-包體積分析

// 什麼是包體積分析?
// 通過可視化的方式,直觀的體現項目中各種打包之後的體積大小, 方便做優化

// 怎麼做到? source-map-explorer
// 1.安裝包
// npm i source-map-explorer
// 2.配置命令指定要分析的js文件
//    "analyze": "source-map-explorer 'build/static/js/*.js'"

// 執行 npm run analyze

//插件沒有跑成功

// ------------------------------------------------------------------------

// 打包優化 - CDN優化

// CDN是一種內容分發網路服務,當用戶請求網站內容時
// 由離用戶最近的服務器將緩存的資源內容傳遞給用戶

// 哪一些資料可以放到CDN服務器
// 一班會把體積較大的非業務JS文件,比如react 、 react-dom
// 1.體積較大,需要利用CDN文件再瀏覽器的緩存特性,加快加載時間
// 2.非業務JS文件,不需要經常做變動, CDN不用頻繁更新緩存

// 項目中怎麼做
// 1.需要把做CDN緩存的文件排除再打包之外(react、react-dom)
// 2.以CDN的方式重新引入資源(react 、 react-dom)