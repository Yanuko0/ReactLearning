// React.memo

// 作用: 允許組件在Props沒有改變的情況下跳過渲染
// React組件默認的渲染機制: 只要父組件重新渲染子組件就會重新渲染

//   App         update
//    |          
//    ↓
//   Son         update

// 思考:如果Son本身並不需要做渲染更新,是不是存在浪費

// 基礎語法
// const MemoComponent = memo(function SomeComponent (prop){
// })

// 說明: 經過memo函數包過生成的緩存組件 只有在props發生變化時才會重新渲染

// 詳情看件置項目裡面的空模板

// ------------------------------------------------------------------------

// React.memo - props的比較機制

// 機制: 在使用memo緩存組件之後, React會對每一個 prop 使用 Object.is 比較新值和老值, 返回true, 表示沒有變化

// prop是簡單類型

// Object(3,3) => true 沒有變化

// prop 是引用類型 (對象/數組)

// Object([],[]) => false 有變化,React只關心引用是否變化

// ------------------------------------------------------------------------