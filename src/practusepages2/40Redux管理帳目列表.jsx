import React, { useEffect } from 'react'

export default function ManagementAccountList() {
    // 用Redux管理帳目列表
//       -----------              ------------
//           RTK                    component
//     state-billList 
//   reducer-setBillList           
//        異步action     <----   dispatch異步action

// 需求理解和實現方式
// 使用antD的TabBar標籤欄組鍵進行布局以及路由的切換

// 實現方式: 看文檔(找到相似的Demo-複製代碼跑通-定制化修改)

// 1.靜態布局實現

// 2.切換路由實現

// 月度帳單
// 功能點
// 1.點擊切換月份
// 2.適配箭頭顯示
// 3.統計支出、收入、結餘數據

// 功能要求
// 1.點擊打開時間選擇框
// 2.點擊取消/確認按鈕以及蒙層區域都可以關閉彈框
// 3.彈框關閉時箭頭朝下,打開時箭頭朝上

// 基礎思路

// 準備一個狀態數據   通過切換狀態變化實現功能

// 點擊確定切換時間顯示

// 基礎思路:
// 1.創建一個控制時間顯示的狀態
// 2.拿到當前選中的時間賦值給狀態

// 帳單數據按月進行分組

// 1.從Redux中拿到數據

// 2.數據二次處理(useMemo)

// 3.按月分組邏輯實現(lodash)


// 計算選擇月份的統計數據

// 需求:點擊時間確認按鈕之後,把當月的統計數據計算出來顯示到頁面中

// 1.點擊確認獲取到當前月
// 2.再按月分組樹據中找到對應的樹組
// 3.基於數組作計算 useMemo-reduce


// 月度初始化時渲染統計數據

// 需求:打開月度帳單時，把當前月份的統計數據渲染到頁面中

// useEffect
// 已當前時間作為key取帳單數組
// monthResult自動重新計算

// 單日統計列表實現
// 需求:把當前月的帳單數據以單日為單位,進行統計顯示

// 1.準備單日帳單統計組件
// 2.把當前月的數據按日來分組(日期列表和帳單分組數據)
// 3.遍歷數據給組件傳入日期數據和當日列表數據

// 單日帳單列表顯示
// 需求:把當日的帳案列表渲染到視圖中

// 1.準備列表模板
// 2.渲染模板數據
// 3.視配中文顯示

// 點擊切換列表顯示
// 需求:點擊展開收起箭頭,切換帳單列表顯示

// 1.控制顯隱的狀態
// 2.點擊取反操作
// 3.根據狀態適配箭頭和隱藏

// 帳單類型圖標組件封裝
// 需求:封裝一個圖標組件,可以根據不同的帳單顯示不同的圖標

// 1.準備一個純靜態的組件結構
// 2.根據Props適配不同圖標
// https://yiy-teach-oss.oss-cn-beijing.aliyuncs.com/reactbase/ka/food.svg
// 只需要把food.svg換了就可以換圖標 把Props(type)

// 新增帳單模塊
// 功能分析靜態結構搭建

// 1.不同類型的帳單列表渲染
// 2.支出和收入兩種狀態切換
// 3.點擊保存實現記帳功能


// 支出和收入切換功能實現

// 1.準備控制支出收入的狀態
// 2.點擊按鈕切換狀態
// 3.適配按鈕樣式
// 4.適配數據顯示

// 新增帳單實現

// 組件中收集接口數據
// 1.type 帳單類型 支出pay/收入income
// 2.money帳單金額 支出為負/收入為正
// 3.date 記帳時間
// 4.useFor帳單Type

// 在Redux中編寫異步代碼

// 點擊保存是提交action


  return (
    <div>   
    </div>
  )
}
