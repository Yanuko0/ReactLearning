<!-- 再建置CRA項目裡面做 -->
<!-- https://ant.design/components/card-cn -->
------------------------------------------------------------------------
<!-- 基本結構搭建 -->
<!-- 實現步驟 -->
<!-- 1.在Login/index.js中創建登錄頁面基本結構 -->
<!-- 2.在Login目錄中創建index.scss文件,指定組件樣式 -->
<!-- 3.將logo.png 和 login.png拷貝到assets目錄中 -->

<!-- 使用現成的Ant組件創建登入頁的內容結構 -->

<!-- 主要組件 Card、Form、Input、Button -->
------------------------------------------------------------------------
<!-- 登錄-表單校驗實現 -->
<!-- 表單校驗,可以在用戶提交登入之前,校驗用戶的輸入是否符合預期, -->
<!-- 如果不符合就阻止提交,顯示錯誤信息 -->

<!-- 參考官方實現基礎Demo -->

<!-- FormItem 綁定 name -->
<!-- FormItem 綁定 rules -->

<!-- 
<Form.Item
name="username"  //指定校驗字段名  //要跟後端街口保持一致
rules={[           //指定當前校驗規則對象
{                   
required: true,
message: 'Please input your username!',
},
]}>
<Input size="large" placeholder="請輸入手機號碼"/>
</Form.Item> 
-->

<!-- 按照業務定制化修改 -->

<!-- 增加失焦時校驗 -->
<!-- <Form validateTrigger="onBlur"> validateTrigger 來自官方文檔  -->
<!-- 手機號為有效格式 -->

------------------------------------------------------------------------
<!-- 登錄- 獲取表單數據 -->
<!-- 當用戶輸入正確的表單內容,點擊確認時需要收集到用戶當前輸入的內容,用來提交接口請求 -->

<!-- 解決方案:給Form組件綁定onFinish回調函數,通過回調函數的參數獲取用戶輸入的內容 -->
<!-- const onFinish = (values) => {
        console.log(values)
    } -->
<!-- 拿到用戶輸入數據 -->
------------------------------------------------------------------------
<!-- 登錄-封裝request請求模塊 -->
<!-- 再整個項目中會發送很多網路請求,使用axios三方庫做好統一封裝,方便統一管理和復用 -->

<!-- 1.幾乎所有的接口都是一樣的接口域名 -->
<!-- 2.幾乎所有的街口都需要設置一樣的超時時間 -->
<!-- 3.幾乎所有接口都需要做Token權限處理 -->
<!-- 
axios統一封裝  =>  axios實例   ---{  接口1
                                 {  接口2
                                 {  接口n 
-->